{"ast":null,"code":"import Cookie from 'js-cookie';\n// import { Login } from '@/api/login';\n// import { GetInfo,UpdateInfo,GetMerchantInfo,updateMerchant, GetUsers } from '@/api/users';\nimport { getNickName, getToken, getUserName, removeToKen, removeUserName, setToKen, setUserName } from '@/utils/app';\nconst state = {\n  // 单一的数据类型\n  isCollapse: JSON.parse(sessionStorage.getItem('isCollapse')) || false //优先取浏览器里的值\n  // isCollapse:JSON.parse(localStorage.getItem('isCollapse')) || false,//长期存储\n  // isCollapse:Cookie.get('isCollapse') || false,//长期存储\n  // JSON.parse()//字符串转对象\n  // count:10\n  // to_Ken: getToken() || '',\n  // username: getUserName() || '',\n  // nickname:getNickName()||'',\n};\nconst getters = {\n  isCollapse: state => state.isCollapse,\n  username: state => state.username\n};\nconst mutations = {\n  // 同步函数\n  // 提交更改数据，使用store.commit方法更改state存储的状态\n  // 专注于修改State，理论上是修改State的唯一途径\n  SET_isCollapse(state) {\n    state.isCollapse = !state.isCollapse;\n    // 触发点击后HTML5本地存储 存储的值必须是字符串类型 浏览器关闭时候清除 临时性的东西\n    // window.sessionStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse)) \n    // window.localStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse))//长期存储，自己清除或者设置清除\n    // Cookie\n    Cookie.set('isCollapse', JSON.stringify(state.isCollapse)); //用于请求头携带cookie\n  }\n  // 当退出清除cookie时也要讲state里面的token清空\n  // SET_TOKEN(state, value) {\n  //     state.to_Ken = value\n\n  // },\n  // SET_USERNAME(state, value) {\n  //     state.username = value\n\n  // },\n};\nconst actions = {\n  login(content, data) {\n    return new Promise((resolve, reject) => {\n      // 接口\n      Login(data).then(response => {\n        let data = response.data;\n        console.log(data);\n        // content.commit('SET_TOKEN', data.toKen);\n        setToKen(data.toKen);\n        setUserName(data.username);\n        // content.commit('SET_USERNAME', data.username);\n        console.log(\"测试达到位置\");\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"测试错误\");\n        reject(error);\n      });\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["Cookie","getNickName","getToken","getUserName","removeToKen","removeUserName","setToKen","setUserName","state","isCollapse","JSON","parse","sessionStorage","getItem","getters","username","mutations","SET_isCollapse","set","stringify","actions","login","content","data","Promise","resolve","reject","Login","then","response","console","log","toKen","catch","error","namespaced"],"sources":["D:/graduate_design/project/movieweb/MovieClient/movieclient/src/store/module/app.js"],"sourcesContent":["import Cookie from 'js-cookie';\r\n// import { Login } from '@/api/login';\r\n// import { GetInfo,UpdateInfo,GetMerchantInfo,updateMerchant, GetUsers } from '@/api/users';\r\nimport { getNickName, getToken, getUserName, removeToKen, removeUserName, setToKen, setUserName } from '@/utils/app';\r\nconst state = {\r\n    // 单一的数据类型\r\n    isCollapse: JSON.parse(sessionStorage.getItem('isCollapse')) || false,//优先取浏览器里的值\r\n    // isCollapse:JSON.parse(localStorage.getItem('isCollapse')) || false,//长期存储\r\n    // isCollapse:Cookie.get('isCollapse') || false,//长期存储\r\n    // JSON.parse()//字符串转对象\r\n    // count:10\r\n    // to_Ken: getToken() || '',\r\n    // username: getUserName() || '',\r\n    // nickname:getNickName()||'',\r\n}\r\nconst getters = {\r\n    isCollapse: state => state.isCollapse,\r\n    username: state => state.username\r\n}\r\nconst mutations = {\r\n    // 同步函数\r\n    // 提交更改数据，使用store.commit方法更改state存储的状态\r\n    // 专注于修改State，理论上是修改State的唯一途径\r\n    SET_isCollapse(state) {\r\n        state.isCollapse = !state.isCollapse\r\n        // 触发点击后HTML5本地存储 存储的值必须是字符串类型 浏览器关闭时候清除 临时性的东西\r\n        // window.sessionStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse)) \r\n        // window.localStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse))//长期存储，自己清除或者设置清除\r\n        // Cookie\r\n        Cookie.set('isCollapse', JSON.stringify(state.isCollapse)) //用于请求头携带cookie\r\n    },\r\n    // 当退出清除cookie时也要讲state里面的token清空\r\n    // SET_TOKEN(state, value) {\r\n    //     state.to_Ken = value\r\n\r\n    // },\r\n    // SET_USERNAME(state, value) {\r\n    //     state.username = value\r\n\r\n    // },\r\n\r\n\r\n}\r\nconst actions = {\r\n     login(content, data) {\r\n        return new Promise((resolve, reject) => {\r\n            // 接口\r\n            Login(data).then((response) => {\r\n                let data = response.data\r\n                console.log(data);\r\n                // content.commit('SET_TOKEN', data.toKen);\r\n                setToKen(data.toKen)\r\n                setUserName(data.username)\r\n                // content.commit('SET_USERNAME', data.username);\r\n                console.log(\"测试达到位置\");\r\n                resolve(response)\r\n            }).catch(error => {\r\n                console.log(error);\r\n                console.log(\"测试错误\");\r\n                reject(error)\r\n\r\n            })\r\n        })\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    mutations,\r\n    actions\r\n};"],"mappings":"AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B;AACA;AACA,SAASC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,aAAa;AACpH,MAAMC,KAAK,GAAG;EACV;EACAC,UAAU,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,KAAK,CAAC;EACtE;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AACD,MAAMC,OAAO,GAAG;EACZL,UAAU,EAAED,KAAK,IAAIA,KAAK,CAACC,UAAU;EACrCM,QAAQ,EAAEP,KAAK,IAAIA,KAAK,CAACO;AAC7B,CAAC;AACD,MAAMC,SAAS,GAAG;EACd;EACA;EACA;EACAC,cAAcA,CAACT,KAAK,EAAE;IAClBA,KAAK,CAACC,UAAU,GAAG,CAACD,KAAK,CAACC,UAAU;IACpC;IACA;IACA;IACA;IACAT,MAAM,CAACkB,GAAG,CAAC,YAAY,EAAER,IAAI,CAACS,SAAS,CAACX,KAAK,CAACC,UAAU,CAAC,CAAC,EAAC;EAC/D;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;AAGJ,CAAC;AACD,MAAMW,OAAO,GAAG;EACXC,KAAKA,CAACC,OAAO,EAAEC,IAAI,EAAE;IAClB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC;MACAC,KAAK,CAACJ,IAAI,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;QAC3B,IAAIN,IAAI,GAAGM,QAAQ,CAACN,IAAI;QACxBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;QACjB;QACAjB,QAAQ,CAACiB,IAAI,CAACS,KAAK,CAAC;QACpBzB,WAAW,CAACgB,IAAI,CAACR,QAAQ,CAAC;QAC1B;QACAe,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACrBN,OAAO,CAACI,QAAQ,CAAC;MACrB,CAAC,CAAC,CAACI,KAAK,CAACC,KAAK,IAAI;QACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;QAClBJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnBL,MAAM,CAACQ,KAAK,CAAC;MAEjB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AAIJ,CAAC;AAGD,eAAe;EACXC,UAAU,EAAE,IAAI;EAChB3B,KAAK;EACLM,OAAO;EACPE,SAAS;EACTI;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}