{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { h } from 'vue';\nimport { ElNotification } from 'element-plus';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: \"Login\",\n  setup(props, context) {\n    const form = reactive({\n      username: \"\",\n      password: \"\"\n    });\n    const registerform = reactive({\n      username: \"\",\n      password: \"\",\n      repassword: \"\"\n    });\n    const route = useRoute();\n    const store = useStore();\n    const router = useRouter();\n    const Register = () => {\n      store.dispatch('login/register', data).then(Response => {\n        console.log(Response);\n        if (Response.code == 200) {\n          ElNotification({\n            title: '提示',\n            message: h('i', {\n              style: 'color: teal'\n            }, '注册成功，请登录')\n          });\n        } else {\n          ElNotification({\n            title: '提示',\n            message: h('i', {\n              style: 'color: teal'\n            }, '用户名已被注册')\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    const Login = () => {\n      const data = {\n        \"username\": form.username,\n        \"password\": form.password\n      };\n      store.dispatch('app/login', data).then(Response => {\n        if (Response.code == 200) {\n          ElMessage({\n            message: '登录成功',\n            type: 'success'\n          });\n          router.push(\"/home\");\n        }\n        console.log(Response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    return {\n      form,\n      registerform,\n      Register,\n      Login\n    };\n  }\n};","map":{"version":3,"names":["reactive","useRoute","useRouter","useStore","h","ElNotification","ElMessage","name","setup","props","context","form","username","password","registerform","repassword","route","store","router","Register","dispatch","data","then","Response","console","log","code","title","message","style","catch","error","Login","type","push"],"sources":["D:\\graduate_design\\project\\movieweb\\MovieClient\\movieclient\\src\\views\\Login\\index.vue"],"sourcesContent":["<template>\r\n    <div class=\"background-container \">\r\n        <el-menu :default-active=\"activeIndex2\" class=\"el-menu-demo\" mode=\"horizontal\"\r\n            background-color=\"rgba(255, 255, 255, 0.5)\" text-color=\"#fff\" active-text-color=\"#ffd04b\"\r\n            @select=\"handleSelect\"></el-menu>\r\n        <div class=\"card\">\r\n            <el-tabs type=\"border-card\" stretch=\"true\" style=\"width: 350px;height: 350px;\">\r\n                <el-tab-pane label=\"登录\">\r\n                    <el-form :model=\"form\" label-width=\"auto\" label-position=\"left\" style=\"padding: 35px 0;\">\r\n                        <el-form-item label=\"用户名\" size=\"large\">\r\n                            <el-input v-model=\"form.username\" />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\" size=\"large\" style=\"margin-top: 30px;\">\r\n                            <el-input v-model=\"form.password\" />\r\n                        </el-form-item>\r\n\r\n                    </el-form>\r\n                    <div class=\"flex-container\">\r\n                        <el-button type=\"primary\" @click=\"Login\" style=\"width: 30%;\" size=\"large\">登录</el-button>\r\n                        <el-button type=\"success\" style=\"width: 30%;\" size=\"large\">重置</el-button>\r\n                    </div>\r\n                    <div style=\"text-align: center; font-size: 13px; color: aliceblue; padding: 20px 0;\"><router-link\r\n                            to=\"/\">返回首页</router-link></div>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"注册\">\r\n                    <el-form :model=\"registerform\" label-width=\"auto\" label-position=\"left\" style=\"padding: 10px 0;\">\r\n                        <el-form-item label=\"用户名\" size=\"large\">\r\n                            <el-input v-model=\"registerform.username\" />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\" size=\"large\">\r\n                            <el-input v-model=\"registerform.password\" />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"重复密码\" size=\"large\">\r\n                            <el-input v-model=\"registerform.repassword\" />\r\n                        </el-form-item>\r\n\r\n                    </el-form>\r\n                    <div class=\"flex-container\">\r\n                        <el-button type=\"primary\" @click=\"Register\" style=\"width: 30%;\" size=\"large\">注册</el-button>\r\n                        <el-button type=\"success\" style=\"width: 30%;\" size=\"large\">重置</el-button>\r\n                    </div>\r\n                    <div style=\"text-align: center; font-size: 13px; color: aliceblue; padding: 20px 0;\"><router-link\r\n                            to=\"/\">返回首页</router-link></div>\r\n                </el-tab-pane>\r\n\r\n            </el-tabs>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { reactive } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\nimport { h } from 'vue'\r\nimport { ElNotification } from 'element-plus'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n    name: \"Login\",\r\n    setup(props, context) {\r\n        const form = reactive({\r\n            username: \"\",\r\n            password: \"\"\r\n        })\r\n        const registerform = reactive({\r\n            username: \"\",\r\n            password: \"\",\r\n            repassword: \"\",\r\n\r\n        })\r\n        const route = useRoute()\r\n        const store = useStore()\r\n        const router = useRouter()\r\n\r\n        const Register = () => {\r\n            store.dispatch('login/register', data).then(Response => {\r\n                console.log(Response);\r\n                if (Response.code == 200) {\r\n                    ElNotification({\r\n                        title: '提示',\r\n                        message: h('i', { style: 'color: teal' }, '注册成功，请登录'),\r\n                    })\r\n                } else {\r\n                    ElNotification({\r\n                        title: '提示',\r\n                        message: h('i', { style: 'color: teal' }, '用户名已被注册'),\r\n                    })\r\n                }\r\n\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n        const Login = () => {\r\n            const data = {\r\n                \"username\": form.username,\r\n                \"password\": form.password\r\n            }\r\n            store.dispatch('app/login', data).then(Response => {\r\n                if (Response.code == 200) {\r\n                    ElMessage({\r\n                        message: '登录成功',\r\n                        type: 'success',\r\n                    })\r\n                    router.push(\"/home\")\r\n                }\r\n                console.log(Response);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n\r\n        return {\r\n            form,\r\n            registerform,\r\n            Register,\r\n            Login\r\n        }\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.card {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 80vh;\r\n    margin: 0;\r\n\r\n\r\n}\r\n\r\n\r\n.flex-container {\r\n    text-align: center;\r\n\r\n}\r\n\r\n\r\n\r\n.background-container {\r\n    background-image: url(\"~@/assets/bg.png\") !important;\r\n\r\n    /* 替换成你想要设置的背景图片路径 */\r\n    background-size: cover;\r\n    height: 100vh;\r\n    /* 可以根据需要调整背景图片的尺寸适应 */\r\n    /* 可以添加其他样式属性，比如背景重复、定位等 */\r\n}\r\n</style>\r\n<style>\r\n.el-tabs {\r\n    background-color: rgba(255, 255, 255, 0.5) !important;\r\n    /* 设置背景颜色为白色，透明度为0.5 */\r\n}\r\n</style>"],"mappings":";AAkDA,SAASA,QAAO,QAAS,KAAK;AAC9B,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAY;AAChD,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,CAAA,QAAS,KAAI;AACtB,SAASC,cAAa,QAAS,cAAa;AAC5C,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAACC,KAAK,EAAEC,OAAO,EAAE;IAClB,MAAMC,IAAG,GAAIX,QAAQ,CAAC;MAClBY,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd,CAAC;IACD,MAAMC,YAAW,GAAId,QAAQ,CAAC;MAC1BY,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZE,UAAU,EAAE;IAEhB,CAAC;IACD,MAAMC,KAAI,GAAIf,QAAQ,CAAC;IACvB,MAAMgB,KAAI,GAAId,QAAQ,CAAC;IACvB,MAAMe,MAAK,GAAIhB,SAAS,CAAC;IAEzB,MAAMiB,QAAO,GAAIA,CAAA,KAAM;MACnBF,KAAK,CAACG,QAAQ,CAAC,gBAAgB,EAAEC,IAAI,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QACpDC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIA,QAAQ,CAACG,IAAG,IAAK,GAAG,EAAE;UACtBrB,cAAc,CAAC;YACXsB,KAAK,EAAE,IAAI;YACXC,OAAO,EAAExB,CAAC,CAAC,GAAG,EAAE;cAAEyB,KAAK,EAAE;YAAc,CAAC,EAAE,UAAU;UACxD,CAAC;QACL,OAAO;UACHxB,cAAc,CAAC;YACXsB,KAAK,EAAE,IAAI;YACXC,OAAO,EAAExB,CAAC,CAAC,GAAG,EAAE;cAAEyB,KAAK,EAAE;YAAc,CAAC,EAAE,SAAS;UACvD,CAAC;QACL;MAGJ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;QACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACtB,CAAC;IACL;IAEA,MAAMC,KAAI,GAAIA,CAAA,KAAM;MAChB,MAAMX,IAAG,GAAI;QACT,UAAU,EAAEV,IAAI,CAACC,QAAQ;QACzB,UAAU,EAAED,IAAI,CAACE;MACrB;MACAI,KAAK,CAACG,QAAQ,CAAC,WAAW,EAAEC,IAAI,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QAC/C,IAAIA,QAAQ,CAACG,IAAG,IAAK,GAAG,EAAE;UACtBpB,SAAS,CAAC;YACNsB,OAAO,EAAE,MAAM;YACfK,IAAI,EAAE;UACV,CAAC;UACDf,MAAM,CAACgB,IAAI,CAAC,OAAO;QACvB;QACAV,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACzB,CAAC,CAAC,CAACO,KAAK,CAACC,KAAI,IAAK;QACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACtB,CAAC;IACL;IAGA,OAAO;MACHpB,IAAI;MACJG,YAAY;MACZK,QAAQ;MACRa;IACJ;EAEJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}