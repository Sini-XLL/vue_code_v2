{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LayoutHeader = _resolveComponent(\"LayoutHeader\");\n  const _component_LayoutMain = _resolveComponent(\"LayoutMain\");\n  const _component_LayoutNav = _resolveComponent(\"LayoutNav\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"layout\",\n    class: _normalizeClass([$setup.menuState ? 'close' : 'open'])\n  }, [_createVNode(_component_LayoutHeader), _createVNode(_component_LayoutMain), _createVNode(_component_LayoutNav)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","id","class","_normalizeClass","$setup","menuState","_createVNode","_component_LayoutHeader","_component_LayoutMain","_component_LayoutNav"],"sources":["D:\\graduate_design\\project\\movieweb\\MovieClient\\movieclient\\src\\views\\Admin\\Layout\\index.vue"],"sourcesContent":["<template>\r\n    <div id=\"layout\" :class=\"[menuState ? 'close' : 'open']\">\r\n        <LayoutHeader />\r\n        <LayoutMain />\r\n        <LayoutNav />\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport Nav from './Components/Nav.vue'\r\nimport Header from './Components/Header.vue'\r\nimport Main from './Components/Main.vue'\r\nimport { computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nexport default {\r\n    name: 'adminlayout',\r\n    components: { Footer, Header, Nav },\r\n    setup(props, context) {\r\n        const store = useStore()\r\n        const menuState = computed(() => store.state.app.isCollapse)\r\n        return {\r\n            menuState\r\n        }\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#layout {\r\n    background-color: #f7f7f7;\r\n}\r\n</style>"],"mappings":";;;;;uBACIA,mBAAA,CAIM;IAJDC,EAAE,EAAC,QAAQ;IAAEC,KAAK,EAD3BC,eAAA,EAC8BC,MAAA,CAAAC,SAAS;MAC/BC,YAAA,CAAgBC,uBAAA,GAChBD,YAAA,CAAcE,qBAAA,GACdF,YAAA,CAAaG,oBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}