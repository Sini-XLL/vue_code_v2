{"ast":null,"code":"// import Cookie from 'js-cookie';\n// import { Login } from '@/api/login';\nimport { GetInfo, UpdateInfo, GetMerchantInfo, updateMerchant, GetUsers } from '@/api/users';\nimport { getNickName, getToken, getUserName, removeToKen, removeUserName, setToKen, setUserName } from '@/utils/app';\nconst state = {\n  // 单一的数据类型\n  isCollapse: JSON.parse(sessionStorage.getItem('isCollapse')) || false,\n  //优先取浏览器里的值\n  // isCollapse:JSON.parse(localStorage.getItem('isCollapse')) || false,//长期存储\n  // isCollapse:Cookie.get('isCollapse') || false,//长期存储\n  // JSON.parse()//字符串转对象\n  // count:10\n  to_Ken: getToken() || '',\n  username: getUserName() || '',\n  nickname: getNickName() || ''\n};\nconst getters = {\n  isCollapse: state => state.isCollapse,\n  username: state => state.username\n};\nconst mutations = {\n  // 同步函数\n  // 提交更改数据，使用store.commit方法更改state存储的状态\n  // 专注于修改State，理论上是修改State的唯一途径\n  SET_isCollapse(state) {\n    state.isCollapse = !state.isCollapse;\n    // 触发点击后HTML5本地存储 存储的值必须是字符串类型 浏览器关闭时候清除 临时性的东西\n    // window.sessionStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse)) \n    // window.localStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse))//长期存储，自己清除或者设置清除\n    // Cookie\n    Cookie.set('isCollapse', JSON.stringify(state.isCollapse)); //用于请求头携带cookie\n  },\n  // 当退出清除cookie时也要讲state里面的token清空\n  SET_TOKEN(state, value) {\n    state.to_Ken = value;\n  },\n  SET_USERNAME(state, value) {\n    state.username = value;\n  }\n};\nconst actions = {\n  // 业务代码，异步请求\n  // 异步：请求接口返回数据后，接着去做别的事情\n  // 可以同步也可以异步\n  // setMenuStatus(content,data){\n  //   // content这个参数指向的是store\n  //   // content.state\n  //   // content.getters\n  //   // content.commit\n  //   // content.rootGetters\n  //   console.log(data.name);\n  //   content.commit('SET_isCollapse')\n  login(content, data) {\n    return new Promise((resolve, reject) => {\n      // 接口\n      Login(data).then(response => {\n        let data = response.data;\n        console.log(data);\n        content.commit('SET_TOKEN', data.toKen);\n        setToKen(data.toKen);\n        setUserName(data.username);\n        content.commit('SET_USERNAME', data.username);\n        console.log(\"测试达到位置\");\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"测试错误\");\n        reject(error);\n      });\n    });\n  },\n  exit(content, data) {\n    return new Promise((resolve, reject) => {\n      removeUserName();\n      removeToKen();\n      content.commit('SET_TOKEN', '');\n      content.commit('SET_USERNAME', '');\n      resolve();\n    });\n  },\n  // 查询用户信息\n  getInfo(content, data) {\n    return new Promise((resolve, reject) => {\n      GetInfo(data).then(response => {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  },\n  // 更新用户信息\n  updateInfo(content, data) {\n    return new Promise((resolve, reject) => {\n      UpdateInfo(data).then(response => {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  },\n  // 查询商家信息\n  getMerchantInfo(content, data) {\n    return new Promise((resolve, reject) => {\n      GetMerchantInfo(data).then(response => {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  },\n  updateMerchant(content, data) {\n    return new Promise((resolve, reject) => {\n      updateMerchant(data).then(response => {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  },\n  getUsers(content, data) {\n    return new Promise((resolve, reject) => {\n      GetUsers(data).then(response => {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["GetInfo","UpdateInfo","GetMerchantInfo","updateMerchant","GetUsers","getNickName","getToken","getUserName","removeToKen","removeUserName","setToKen","setUserName","state","isCollapse","JSON","parse","sessionStorage","getItem","to_Ken","username","nickname","getters","mutations","SET_isCollapse","Cookie","set","stringify","SET_TOKEN","value","SET_USERNAME","actions","login","content","data","Promise","resolve","reject","Login","then","response","console","log","commit","toKen","catch","error","exit","getInfo","err","updateInfo","getMerchantInfo","getUsers","namespaced"],"sources":["D:/graduate_design/project/movieweb/MovieClient/movieclient/src/store/module/app.js"],"sourcesContent":["// import Cookie from 'js-cookie';\r\n// import { Login } from '@/api/login';\r\nimport { GetInfo,UpdateInfo,GetMerchantInfo,updateMerchant, GetUsers } from '@/api/users';\r\nimport { getNickName, getToken, getUserName, removeToKen, removeUserName, setToKen, setUserName } from '@/utils/app';\r\nconst state = {\r\n    // 单一的数据类型\r\n    isCollapse: JSON.parse(sessionStorage.getItem('isCollapse')) || false,//优先取浏览器里的值\r\n    // isCollapse:JSON.parse(localStorage.getItem('isCollapse')) || false,//长期存储\r\n    // isCollapse:Cookie.get('isCollapse') || false,//长期存储\r\n    // JSON.parse()//字符串转对象\r\n    // count:10\r\n    to_Ken: getToken() || '',\r\n    username: getUserName() || '',\r\n    nickname:getNickName()||'',\r\n}\r\nconst getters = {\r\n    isCollapse: state => state.isCollapse,\r\n    username: state => state.username\r\n}\r\nconst mutations = {\r\n    // 同步函数\r\n    // 提交更改数据，使用store.commit方法更改state存储的状态\r\n    // 专注于修改State，理论上是修改State的唯一途径\r\n    SET_isCollapse(state) {\r\n        state.isCollapse = !state.isCollapse\r\n        // 触发点击后HTML5本地存储 存储的值必须是字符串类型 浏览器关闭时候清除 临时性的东西\r\n        // window.sessionStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse)) \r\n        // window.localStorage.setItem(\"isCollapse\",JSON.stringify(state.isCollapse))//长期存储，自己清除或者设置清除\r\n        // Cookie\r\n        Cookie.set('isCollapse', JSON.stringify(state.isCollapse)) //用于请求头携带cookie\r\n    },\r\n    // 当退出清除cookie时也要讲state里面的token清空\r\n    SET_TOKEN(state, value) {\r\n        state.to_Ken = value\r\n\r\n    },\r\n    SET_USERNAME(state, value) {\r\n        state.username = value\r\n\r\n    },\r\n\r\n\r\n}\r\nconst actions = {\r\n\r\n\r\n    // 业务代码，异步请求\r\n    // 异步：请求接口返回数据后，接着去做别的事情\r\n    // 可以同步也可以异步\r\n    // setMenuStatus(content,data){\r\n    //   // content这个参数指向的是store\r\n    //   // content.state\r\n    //   // content.getters\r\n    //   // content.commit\r\n    //   // content.rootGetters\r\n    //   console.log(data.name);\r\n    //   content.commit('SET_isCollapse')\r\n    login(content, data) {\r\n        return new Promise((resolve, reject) => {\r\n            // 接口\r\n            Login(data).then((response) => {\r\n                let data = response.data\r\n                console.log(data);\r\n                content.commit('SET_TOKEN', data.toKen);\r\n                setToKen(data.toKen)\r\n                setUserName(data.username)\r\n                content.commit('SET_USERNAME', data.username);\r\n                console.log(\"测试达到位置\");\r\n                resolve(response)\r\n\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                console.log(\"测试错误\");\r\n                reject(error)\r\n\r\n            })\r\n        })\r\n    },\r\n    exit(content, data) {\r\n        return new Promise((resolve, reject) => {\r\n            removeUserName()\r\n            removeToKen()\r\n            content.commit('SET_TOKEN', '')\r\n            content.commit('SET_USERNAME', '')\r\n            resolve()\r\n        })\r\n\r\n    },\r\n    // 查询用户信息\r\n    getInfo(content,data){\r\n        return new Promise((resolve,reject)=>{\r\n            GetInfo(data).then((response)=>{\r\n                resolve(response)\r\n            }).catch(err=>{\r\n            reject(err)\r\n        })\r\n        })\r\n    },\r\n    // 更新用户信息\r\n     updateInfo(content,data){\r\n        return new Promise((resolve,reject)=>{\r\n            UpdateInfo(data).then((response)=>{\r\n                resolve(response)\r\n            }).catch(err=>{\r\n            reject(err)\r\n        })\r\n        })\r\n    },\r\n    // 查询商家信息\r\n    getMerchantInfo(content,data){\r\n        return new Promise((resolve,reject)=>{\r\n            GetMerchantInfo(data).then((response)=>{\r\n                resolve(response)\r\n            }).catch(err=>{\r\n            reject(err)\r\n        })\r\n        })\r\n    },\r\n     updateMerchant(content,data){\r\n        return new Promise((resolve,reject)=>{\r\n            updateMerchant(data).then((response)=>{\r\n                resolve(response)\r\n            }).catch(err=>{\r\n            reject(err)\r\n        })\r\n        })\r\n    },\r\n    getUsers(content,data){\r\n        return new Promise((resolve,reject)=>{\r\n            GetUsers(data).then((response)=>{\r\n                resolve(response)\r\n            }).catch(err=>{\r\n            reject(err)\r\n        })\r\n        })\r\n    },\r\n\r\n}\r\n\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    mutations,\r\n    actions\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}