{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  return _openBlock(), _createBlock(_component_el_icon, null, {\n    default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent($props.iconName))), _createCommentVNode(\" 定义组件 \")]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_icon","default","_withCtx","_resolveDynamicComponent","$props","iconName","_createCommentVNode","_"],"sources":["D:\\graduate_design\\project\\movieweb\\MovieClient\\movieclient\\src\\icons\\SvgIcon.vue"],"sourcesContent":["<template>\r\n\r\n    <el-icon>\r\n        <component :is=\"iconName\"></component>\r\n        <!-- 定义组件 -->\r\n    </el-icon>\r\n\r\n\r\n</template>\r\n<script>\r\nimport { computed, ref } from 'vue';\r\n\r\nexport default {\r\n    name: 'svgIcon',\r\n    // props:['iconClass','className'], //父组件传过来的值 简单语法不限制数据类型\r\n    // 规定数据类型写法\r\n    props: {\r\n        iconName: {\r\n            type: String,//定义接收的值类型\r\n            // required:true\r\n            default: ''\r\n        },\r\n\r\n        // className:{\r\n        //     type:Array,\r\n        //     default:()=>[] //对象类型\r\n        // }\r\n    },\r\n    setup(props, context) {\r\n        // console.log(props.iconName);\r\n\r\n        const msg = ref('测试是否成功')\r\n        const count = ref(10)\r\n        // computed 监听属性变化并计算属性\r\n        const plusOne = computed(() => {\r\n            return count.value + 1\r\n        })\r\n        const iconClass = computed(() => `${props.iconName}`)\r\n\r\n\r\n        return {\r\n            msg,\r\n            iconClass,\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>"],"mappings":";;;uBAEIA,YAAA,CAGUC,kBAAA;IALdC,OAAA,EAAAC,QAAA,CAGQ,MAAsC,E,cAAtCH,YAAA,CAAsCI,wBAH9C,CAGwBC,MAAA,CAAAC,QAAQ,KACxBC,mBAAA,UAAa,C;IAJrBC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}