{"ast":null,"code":"import { ref, getCurrentInstance, reactive, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'navMenu',\n  setup(props, context) {\n    const router = useRouter(); //useRouter 钩子被用来获取路由实例\n    const route = useRoute();\n    // 访问当前路由\n    // console.log(route);\n    // 在组件加载时打印当前路由信息\n    // console.log(router.options.routes)//打印出当前项目所有路由\n    // 将所有路由赋值给变量\n    const routers = reactive(router.options.routes);\n    const imageUrl = require('@/assets/images/logo.png'); //引入网站logo\n    const store = useStore();\n    //判断是否折叠的标志\n    const isCollapse = computed(() => {\n      // computed检测数据变化更新\n      return store.state.app.isCollapse;\n    });\n    return {\n      routers,\n      imageUrl,\n      isCollapse\n    };\n  }\n};","map":{"version":3,"names":["ref","getCurrentInstance","reactive","computed","useRouter","useRoute","useStore","name","setup","props","context","router","route","routers","options","routes","imageUrl","require","store","isCollapse","state","app"],"sources":["D:\\graduate_design\\project\\movieweb\\MovieClient\\movieclient\\src\\views\\Admin\\Layout\\Components\\Nav.vue"],"sourcesContent":["<template>\r\n    <div id=\"nav-wrap\">\r\n        <div class=\"demo-image\">\r\n            <div class=\"block\">\r\n                <el-image :class=\"[isCollapse ? 'image_close' : 'image_open']\" :src=\"imageUrl\" fit=\"cover\" />\r\n            </div>\r\n        </div>\r\n        <div id=\"nav-menu\">\r\n            <el-menu default-active=\"2\" class=\"el-menu-vertical-demo\" router=\"true\" :collapse=\"isCollapse\"\r\n                background-color=\"#344a5f\" text-color=\"#ffffff\">\r\n                <template v-for=\"(item, index) in routers\">\r\n                    <!-- 判断路由是否显示 -->\r\n                    <el-sub-menu v-if=\"!item.hidden\" :key=\"item.id\" :index=\"index\">\r\n                        <!-- 一级菜单 -->\r\n                        <template #title>\r\n                            <SvgIcon :iconName=\"item.meta.icon\" />\r\n                            <span>{{ item.meta.name }}</span>\r\n                        </template>\r\n                        <!-- 子菜单 -->\r\n                        <el-menu-item v-for=\"subItem in item.children\" :key=\"subItem.id\" :index=\"subItem.path\">\r\n\r\n                            {{ subItem.meta.name }}\r\n                        </el-menu-item>\r\n                    </el-sub-menu>\r\n                </template>\r\n            </el-menu>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport { ref, getCurrentInstance, reactive, computed } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\nexport default {\r\n    name: 'navMenu',\r\n    setup(props, context) {\r\n        const router = useRouter()//useRouter 钩子被用来获取路由实例\r\n        const route = useRoute()\r\n        // 访问当前路由\r\n        // console.log(route);\r\n        // 在组件加载时打印当前路由信息\r\n        // console.log(router.options.routes)//打印出当前项目所有路由\r\n        // 将所有路由赋值给变量\r\n        const routers = reactive(router.options.routes)\r\n        const imageUrl = require('@/assets/images/logo.png');//引入网站logo\r\n        const store = useStore();\r\n        //判断是否折叠的标志\r\n        const isCollapse = computed(() => {\r\n            // computed检测数据变化更新\r\n            return store.state.app.isCollapse;\r\n        });\r\n        return {\r\n\r\n            routers,\r\n            imageUrl,\r\n            isCollapse\r\n        };\r\n    }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import '../';\r\n\r\n#nav-wrap {\r\n    position: fixed; // 设置元素的定位方式为固定定位\r\n    top: 0; // 元素距离视口上边的距离为0\r\n    left: 0; // 元素距离视口左边的距离为0\r\n    // width: $navMenu;               // 设置元素的宽度为250像素\r\n    height: 100vh; // 设置元素的高度为视口的100%（即全屏高度）\r\n    background-color: #344a5f; // 设置元素的背景颜色为#345333（一种深绿色）\r\n    @include webkit(transition, all .6s ease 0s)\r\n}\r\n\r\n.open {\r\n    #nav-wrap {\r\n        width: $navMenu_open;\r\n    }\r\n}\r\n\r\n.close {\r\n    #nav-wrap {\r\n        width: $navMenu_close;\r\n    }\r\n}\r\n\r\n// #nav-menu{\r\n//     padding: 75px 0 0 0;\r\n// }\r\n// element Plus\r\n.demo-image .block {\r\n    // position: fixed;\r\n    padding: 30px 0;\r\n    text-align: center;\r\n    display: inline-block;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n}\r\n\r\n// 图片大小\r\n.image_open {\r\n    width: 100px;\r\n    height: 100px;\r\n    // -webkit-transition: all .3s ease 0s;\r\n    @include webkit(transition, all .6s ease 0s)\r\n}\r\n\r\n.image_close {\r\n    width: 25px;\r\n    height: 25px;\r\n    // -webkit-transition: all .3s ease 0s;\r\n    @include webkit(transition, all .6s ease 0s)\r\n}\r\n</style>"],"mappings":"AAiCA,SAASA,GAAG,EAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,QAAO,QAAS,KAAI;AAChE,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,SAASC,QAAO,QAAS,MAAM;AAC/B,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,KAAKA,CAACC,KAAK,EAAEC,OAAO,EAAE;IAClB,MAAMC,MAAK,GAAIP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,KAAI,GAAIP,QAAQ,CAAC;IACvB;IACA;IACA;IACA;IACA;IACA,MAAMQ,OAAM,GAAIX,QAAQ,CAACS,MAAM,CAACG,OAAO,CAACC,MAAM;IAC9C,MAAMC,QAAO,GAAIC,OAAO,CAAC,0BAA0B,CAAC,CAAC;IACrD,MAAMC,KAAI,GAAIZ,QAAQ,CAAC,CAAC;IACxB;IACA,MAAMa,UAAS,GAAIhB,QAAQ,CAAC,MAAM;MAC9B;MACA,OAAOe,KAAK,CAACE,KAAK,CAACC,GAAG,CAACF,UAAU;IACrC,CAAC,CAAC;IACF,OAAO;MAEHN,OAAO;MACPG,QAAQ;MACRG;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}